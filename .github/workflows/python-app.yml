# Koninklijke Philips N.V., 2019 - 2020. All rights reserved.
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build Python application and Publish Python üêç distributions üì¶ to PyPI and TestPyPI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    branches: [ master ]
env:
  NODE_VERSION: '10.13.0'                # set this to the node version to use
jobs:
  build:
    name: Conduct "Static analysis, Test & Coverage, Spell check, Mutation testing " for üêç code
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          node-version: ${{ env.NODE_VERSION }}
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      - name: Install dependencies Conduct Static analysis Test Coverage Mutation
        run: |
          python build_scripts/dependencies_static_analysis_test_cov.py
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact_static_analysis
          path: |
            htmlcov
            CC.xml
            jscpd-report.json
            mutation.txt

  publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    needs: build
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install the dependencies
      run: |
        python build_scripts/install_dependencies.py
    - name: Build a binary wheel and a source tarball
      run: |
        python setup.py sdist bdist_wheel
    - name: Install newly created wheel
      run: |
          python build_scripts/install_package.py
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact_static_analysis
        path: |
          dist
    - name: Publish distribution üì¶ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution üì¶ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
